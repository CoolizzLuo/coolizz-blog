{"version":3,"sources":["styles/GlobalStyle.js","hooks/useAsync.js","hooks/useFetch.js","hooks/usePagination.js","components/Pagination/Pagination.js","context.js","utils.js","styles/PostStyle.js","pages/HomePage/Post.js","pages/HomePage/FetchPosts.js","pages/HomePage/HomePage.js","pages/AboutPage/AboutPage.js","WebAPI.js","pages/NewPostPage/NewPostPage.js","components/Modal.js","pages/PostPage/Post.js","pages/PostPage/FetchPost.js","pages/PostPage/PostPage.js","pages/ConsolePage/ConsolePage.js","pages/NotFoundPage/NotFoundPage.js","components/RouteSwitch.js","hooks/useToggle.js","styles/FormStyle.js","components/Header/FormModal/LoginForm.js","components/Header/FormModal/RegisterForm.js","components/Header/FormModal/FormModal.js","components/Header/Header.js","components/Footer/Footer.js","App.js","index.js"],"names":["GlobalStyles","css","useAsync","callback","dependencies","useState","loading","setLoading","error","setError","data","setData","callbackMemoized","useCallback","undefined","then","catch","finally","useEffect","DEFAULT_OPTIONS","headers","useFetch","url","options","fetch","res","ok","json","Promise","reject","usePagination","initialPage","initialPageSize","Number","currPage","setCurrPage","totalPage","useMemo","Math","ceil","length","pageData","slice","library","add","fab","PageUl","Li","PageLi","$active","$hide","Pagination","currentPage","setCurrentPage","pageNumArray","Array","from","_","i","offsetArray","PageLiItem","value","onClick","icon","faLeft","map","faEtc","faRight","AuthContext","createContext","TOKEN_NAME","process","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","getFormattedTime","time","Date","toLocaleString","hour12","getUserFromList","userList","userId","find","user","id","PostContainer","styled","article","PostHead","header","PostBody","section","PostTitle","Link","PostInfo","div","PostAuthor","span","PostDate","PostTag","ReadMoreBtn","Container","PostBodyEllipsis","Post","post","title","body","createdAt","to","pathname","state","faCalendarAlt","faUserAlt","username","faTags","Markdown","source","FetchPosts","defaultPage","useContext","setPostData","history","useHistory","toastId","useRef","current","toast","dismiss","position","autoClose","hideProgressBar","push","siblingCount","Wrapper","HomePage","location","page","URLSearchParams","search","get","AboutPage","BASE_URL","SET_DEFAULT_OPTION","Authorization","login","password","a","method","JSON","stringify","singUp","nickname","getUsers","getMe","addPost","removePostById","H2","h2","Form","form","Label","label","Input","input","PostEditor","SubmitBtn","button","schema","yup","required","NewPostPage","setBody","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","promise","pending","success","render","message","type","placeholder","$danger","onChange","autoFocus","toolbarHeight","preview","Modal","children","FetchPost","postId","Nav","nav","ArrowGroup","ArrowLeftBtn","$disable","ArrowRightBtn","CloseBtn","PostPage","postData","useParams","postIndex","findIndex","handlePreviousPost","warn","handleNextPost","faArrowLeft","faArrowRight","faTimes","Table","table","TitleLink","Button","ConsolePage","handleDeletePost","window","confirm","go","col","index","substring","NotFoundPage","RouteSwitch","path","exact","component","useToggle","initialState","setState","toggle","InputField","InputLabel","CheckboxField","CheckboxLabel","Checkbox","ErrorMsg","Note","min","max","LoginForm","toggleModal","switchForm","setUser","reset","decode","matches","confirmPassword","oneOf","checkRules","BackBtn","FormModal","handleToggle","isLoginForm","toggleForm","RegisterForm","HeaderContainer","NavbarList","NavLink","activeClassName","Span","UserBtn","Header","isModalOpen","removeItem","FooterContainer","Footer","href","target","rel","Layout","App","setUserList","useLayoutEffect","Provider","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","ReactDOM","StrictMode","styles","GlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.c2bc79e1.chunk.js","sourcesContent":["import { css } from '@emotion/react'\r\n\r\n\r\nconst GlobalStyles = css`\r\n  @font-face {\r\n    font-family: Cyber;\r\n    src: url(\"https://assets.codepen.io/605876/Blender-Pro-Bold.otf\");\r\n    font-display: swap;\r\n  }\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    /* font-family: \"Cyber\", Futura, sans-serif; */\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n    box-sizing: border-box;\r\n    color: #333;\r\n    letter-spacing: 1px;\r\n    line-height: 1.4;\r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 4px;\r\n    border-radius: 4px;\r\n    background: rgb(219,219,219);\r\n  }\r\n\r\n  html {\r\n    font-size: 20px;\r\n    background: whitesmoke;\r\n  }\r\n\r\n  body {\r\n    margin: .5rem 0 0;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  input, textarea {\r\n    font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n  }\r\n`\r\n\r\nexport default GlobalStyles\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\n\r\nconst useAsync = (callback, dependencies = []) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [data, setData] = useState()\r\n\r\n  const callbackMemoized = useCallback(() => {\r\n    setLoading(true)\r\n    setError(undefined)\r\n    setData([])\r\n    callback()\r\n      .then(setData)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false))\r\n  }, dependencies)\r\n\r\n  useEffect(() => {\r\n    callbackMemoized()\r\n  }, [callbackMemoized])\r\n\r\n  return { loading, error, data }\r\n}\r\nexport default useAsync\r\n","import useAsync from './useAsync'\r\n\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  headers: { 'Content-Type': 'application/json' },\r\n}\r\n\r\nconst useFetch = (url, options = {}, dependencies = []) => {\r\n\r\n  return useAsync(() => {\r\n    return fetch(url, { ...DEFAULT_OPTIONS, ...options }).then(res => {\r\n      if (res.ok) return res.json()\r\n      return res.json().then(json => Promise.reject(json))\r\n    })\r\n  }, dependencies)\r\n}\r\n\r\nexport default useFetch\r\n","import { useState, useMemo } from 'react'\r\n\r\n\r\nconst usePagination = (data, initialPage = 1, initialPageSize = 5) => {\r\n  const [currPage, setCurrPage] = useState(Number(initialPage))\r\n  const totalPage = useMemo(() => Math.ceil(data.length / initialPageSize), [data, initialPageSize])\r\n  const pageData = useMemo(() => {\r\n    return data.slice((currPage - 1) * initialPageSize, currPage * initialPageSize)\r\n  }, [data, currPage, initialPageSize])\r\n\r\n  return { currPage, setCurrPage, totalPage, pageData }\r\n}\r\n\r\nexport default usePagination\r\n","import { useMemo } from 'react'\r\nimport styled from '@emotion/styled/macro'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faChevronLeft as faLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { faChevronRight as faRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEllipsisH as faEtc } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nlibrary.add(fab)\r\n\r\nconst PageUl = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: .4rem 0;\r\n`\r\n\r\nconst Li = styled.li`\r\n  color: #428bca;\r\n  font-size: .7rem;\r\n  font-weight: 500;\r\n  border: 1px solid transparent;\r\n  width: 30px;\r\n  height: 30px;\r\n  line-height: 28px;\r\n  text-align: center;\r\n  user-select: none;\r\n  margin-left: 8px;\r\n\r\n  path {\r\n    color: #428bca;\r\n  }\r\n`\r\n\r\nconst PageLi = styled(Li)`\r\n  border: 1px solid #428bca;\r\n  border-radius: 6px;\r\n  box-shadow: 1px 1px #ccc;\r\n  cursor: pointer;\r\n  transition: transform .3s;\r\n\r\n\r\n  ${({ $active }) => $active && `\r\n    color: #eee;\r\n    background: #428bca;\r\n    border-color: #eee;\r\n    transform: translate(0px, -2px);\r\n    path {\r\n      color: #eee;\r\n    }\r\n  `}\r\n\r\n  &:hover {\r\n    color: #eee;\r\n    background: #428bca;\r\n    border-color: #eee;\r\n    path {\r\n      color: #eee;\r\n    }\r\n  }\r\n\r\n  ${({ $hide }) => $hide && `\r\n    visibility: hidden;\r\n  `}\r\n`\r\n\r\nconst Pagination = ({\r\n  totalPage,\r\n  currentPage = 1,\r\n  setCurrentPage,\r\n}) => {\r\n  const pageNumArray = useMemo(() => Array.from({ length: totalPage }, (_, i) => i + 1), [totalPage])\r\n  const offsetArray = useMemo(() => {\r\n    if (currentPage < 6) return pageNumArray.slice(0, 6)\r\n    else if (currentPage > totalPage - 5) return pageNumArray.slice(totalPage - 6)\r\n    else return pageNumArray.slice(currentPage - 2, currentPage + 1)\r\n  }, [pageNumArray, currentPage, totalPage])\r\n\r\n  const PageLiItem = ({ value }) => (\r\n    <PageLi\r\n      $active={currentPage === value}\r\n      onClick={() => setCurrentPage(value)}>\r\n      {value}\r\n    </PageLi>\r\n  )\r\n\r\n  return (\r\n    <PageUl>\r\n      <PageLi $hide={currentPage <= 1} onClick={() => setCurrentPage(value => --value)}>\r\n        <FontAwesomeIcon icon={faLeft} />\r\n      </PageLi>\r\n      {totalPage < 11 && pageNumArray.map((i) => <PageLiItem key={`pageLi-${i}`} value={i} />)}\r\n      {totalPage >= 11 && (\r\n        <>\r\n          {\r\n            currentPage > 5 && (<>\r\n              <PageLiItem key={`pageLi-1`} value={1} />\r\n              <PageLiItem key={`pageLi-2`} value={2} />\r\n              <Li><FontAwesomeIcon icon={faEtc} /></Li>\r\n            </>)\r\n          }\r\n          {offsetArray.map((i) => <PageLiItem key={`pageLi-${i}`} value={i} />)}\r\n          {\r\n            currentPage <= totalPage - 5 && (<>\r\n              <Li><FontAwesomeIcon icon={faEtc} /></Li>\r\n              <PageLiItem key={`pageLi-${totalPage - 1}`} value={totalPage - 1} />\r\n              <PageLiItem key={`pageLi-${totalPage}`} value={totalPage} />\r\n            </>)\r\n          }\r\n\r\n        </>\r\n      )}\r\n      <PageLi $hide={currentPage >= totalPage} onClick={() => setCurrentPage(value => ++value)}>\r\n        <FontAwesomeIcon icon={faRight} />\r\n      </PageLi>\r\n    </PageUl>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)\r\n\r\nexport const LoadingContext = createContext(false)","const TOKEN_NAME = process.env.REACT_APP_TOKEN_NAME\r\n\r\n\r\nconst setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nconst getAuthToken = () => localStorage.getItem(TOKEN_NAME)\r\nconst clearAuthToken = () => localStorage.removeItem(TOKEN_NAME)\r\n\r\nconst getFormattedTime = (time) => new Date(time).toLocaleString('zh-TW', { hour12: false })\r\nconst getUserFromList = (userList, userId) => userList.find((user) => user.id === userId)\r\n\r\nexport { setAuthToken, getAuthToken, clearAuthToken, getFormattedTime, getUserFromList }\r\n","import styled from '@emotion/styled'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nconst PostContainer = styled.article`\r\n  position: relative;\r\n  background: #fff;\r\n  padding: 1.2rem 1.6rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 2px rgb(0 0 0 / 10%);\r\n  overflow: auto;\r\n`\r\n\r\nconst PostHead = styled.header`\r\n  width: 100%;\r\n  text-align: left;\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n`\r\n\r\nconst PostBody = styled.section`\r\n  font-size: .8rem;\r\n  text-align: left;\r\n  margin: 1rem 0;\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  display: block;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  color: #428bca;\r\n  text-decoration: none;\r\n  overflow: hidden;\r\n`\r\n\r\nconst PostInfo = styled.div`\r\n  display: flex;\r\n  font-size: .6rem;\r\n  padding: .4rem 0;\r\n\r\n  path, span {\r\n    color: #aaa;\r\n  }\r\n\r\n  svg {\r\n    margin-right: .2rem;\r\n  }\r\n\r\n  span {\r\n    margin-right: .8rem;\r\n  }\r\n`\r\n\r\nconst PostAuthor = styled.span`\r\n  font-weight: 500;\r\n`\r\n\r\nconst PostDate = styled.span`\r\n`\r\n\r\nconst PostTag = styled.span`\r\n`\r\n\r\nconst ReadMoreBtn = styled(Link)`\r\n  position: absolute;\r\n  right: 1.6rem;\r\n  bottom: .8rem;\r\n  font-size: .6rem;\r\n  color: #338ccc;\r\n\r\n  &:hover {\r\n    font-weight: 700;\r\n    box-shadow: ;\r\n  }\r\n`\r\n\r\nexport {\r\n  PostContainer,\r\n  PostHead,\r\n  PostBody,\r\n  PostTitle,\r\n  PostInfo,\r\n  PostAuthor,\r\n  PostDate,\r\n  PostTag,\r\n  ReadMoreBtn\r\n}\r\n","import styled from '@emotion/styled/macro'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTags } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport MDEditor from '@uiw/react-md-editor'\r\n\r\nimport { getFormattedTime, getUserFromList } from '../../utils'\r\nimport {\r\n  PostContainer as Container,\r\n  PostHead,\r\n  PostBody,\r\n  PostTitle,\r\n  PostInfo,\r\n  PostAuthor,\r\n  PostDate,\r\n  PostTag,\r\n  ReadMoreBtn\r\n} from '../../styles/PostStyle'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst PostContainer = styled(Container)`\r\n  margin: 2rem 0;\r\n`\r\n\r\nconst PostBodyEllipsis = styled(PostBody)`\r\n  width: 100%;  \r\n  word-wrap: break-word;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  line-clamp: 3;\r\n  -webkit-line-clamp: 3;\r\n  box-orient: vertical;\r\n  -webkit-box-orient: vertical;\r\n`\r\n\r\nconst Post = ({ post, userList }) => {\r\n  const { id, title, body, userId, createdAt } = post\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostHead>\r\n        <PostTitle to={{ pathname: `/post/${id}`, state: { post } }}>{title}</PostTitle>\r\n        <PostInfo>\r\n          <PostDate>\r\n            <FontAwesomeIcon icon={faCalendarAlt} />\r\n            {getFormattedTime(createdAt)}\r\n          </PostDate>\r\n          <PostAuthor>\r\n            <FontAwesomeIcon icon={faUserAlt} />\r\n            {getUserFromList(userList, userId)?.username}\r\n          </PostAuthor>\r\n          <PostTag>\r\n            <FontAwesomeIcon icon={faTags} />\r\n            Lidemy Student\r\n          </PostTag>\r\n        </PostInfo>\r\n      </PostHead>\r\n      <PostBodyEllipsis>\r\n        <MDEditor.Markdown source={body} />\r\n      </PostBodyEllipsis>\r\n      <ReadMoreBtn to={`/post/${id}`}>Read More</ReadMoreBtn>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport usePagination from '../../hooks/usePagination'\r\nimport Pagination from '../../components/Pagination'\r\nimport { AuthContext } from '../../context'\r\nimport Post from './Post'\r\n\r\n\r\nconst FetchPosts = ({ defaultPage = 1 }) => {\r\n  const { userList, setPostData } = useContext(AuthContext)\r\n  const history = useHistory()\r\n  const toastId = useRef(null)\r\n  const { loading, error, data = [] } = useFetch(`${process.env.REACT_APP_BASE_URL}/posts?_sort=createdAt&_order=desc`)\r\n  const { currPage, setCurrPage, totalPage, pageData } = usePagination(data, defaultPage, process.env.REACT_APP_PER_PAGE_ITEM)\r\n\r\n  useEffect(() => {\r\n    loading ? (toastId.current = toast.loading('loading...')) : toast.dismiss(toastId.current)\r\n    return () => toast.dismiss(toastId.current)\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (error) toast.error('Network error')\r\n  }, [error])\r\n\r\n  useEffect(() => {\r\n    if (!totalPage) return\r\n    if (defaultPage > totalPage || defaultPage < 1) {\r\n      toast.error('Maximum number of pages exceeded', { position: \"top-right\", autoClose: 2000, hideProgressBar: true })\r\n      setCurrPage(1)\r\n    }\r\n  }, [defaultPage, totalPage, setCurrPage])\r\n\r\n  useEffect(() => history.push('/?page=' + currPage), [history, currPage])\r\n  useEffect(() => setPostData(data), [setPostData, data])\r\n\r\n  return (\r\n    !loading &&\r\n    <>\r\n      {pageData.map(post => <Post key={post.id} post={post} userList={userList} />)}\r\n      <Pagination\r\n        totalPage={totalPage}\r\n        currentPage={currPage}\r\n        setCurrentPage={setCurrPage}\r\n        siblingCount={0}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FetchPosts\r\n","import styled from '@emotion/styled'\r\n\r\nimport FetchPosts from './FetchPosts'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 .5rem;\r\n`\r\n\r\n\r\nconst HomePage = ({ location }) => {\r\n  const query = new URLSearchParams(location.search)\r\n  const page = query.get('page') || 1\r\n\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FetchPosts defaultPage={page} />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import styled from '@emotion/styled'\r\n\r\n\r\nconst Container = styled.div`\r\n  margin: 2rem auto 0;\r\n  padding: 2rem;\r\n  font-size: calc(20px + 0.33vw);\r\n  text-align: left;\r\n`\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Container>\r\n      <h1>Hello</h1>\r\n      <h3>我是 Enzo</h3>\r\n      <p>是一名系統維運工程師，興趣寫 coding</p>\r\n      <p>年後準備轉職成軟體開發工程師</p>\r\n      <p>這邊以後會轉型成技術部落格. 也許吧</p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutPage\r\n","import { getAuthToken } from './utils'\r\n\r\n\r\nconst BASE_URL = process.env.REACT_APP_BASE_URL\r\n\r\nconst SET_DEFAULT_OPTION = () => {\r\n  return {\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      Authorization: `Bearer ${getAuthToken() || ''}`\r\n    },\r\n  }\r\n}\r\n\r\nconst login = async (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    ...SET_DEFAULT_OPTION(),\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst singUp = async (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/register`, {\r\n    ...SET_DEFAULT_OPTION(),\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getUsers = async () => {\r\n  return fetch(`${BASE_URL}/users`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getMe = async () => {\r\n  return fetch(`${BASE_URL}/me`, { ...SET_DEFAULT_OPTION() })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getPosts = async (sort = 'createdAt', order = 'desc') => {\r\n  return fetch(`${BASE_URL}/posts?_sort=${sort}&_order=${order}`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getPostById = async (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst addPost = async (title, body) => {\r\n  return fetch(`${BASE_URL}/posts`, {\r\n    ...SET_DEFAULT_OPTION(),\r\n    method: 'POST',\r\n    body: JSON.stringify({\r\n      title,\r\n      body,\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst removePostById = async (id) => {\r\n  return fetch(`${BASE_URL}/posts/${id}`, { method: 'DELETE' })\r\n    .then(res => res.json())\r\n}\r\n\r\nexport {\r\n  login,\r\n  singUp,\r\n  getMe,\r\n  getUsers,\r\n  getPosts,\r\n  getPostById,\r\n  addPost,\r\n  removePostById,\r\n}\r\n","import { useState } from 'react'\r\nimport styled from '@emotion/styled'\r\n\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { toast } from 'react-toastify'\r\nimport MDEditor from '@uiw/react-md-editor'\r\n\r\nimport { addPost } from '../../WebAPI'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 2rem auto 0;\r\n  padding: 1rem;\r\n  max-width: 760px;\r\n  background: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 2px rgb(0 0 0 / 10%);\r\n`\r\n\r\nconst H2 = styled.h2`\r\n  text-align: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  margin: 1rem 0 0;\r\n`\r\n\r\nconst Label = styled.label`\r\n  text-align: left;\r\n  display: block;\r\n`\r\n\r\n\r\nconst Input = styled.input`\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n  padding: .6rem;\r\n  margin: .8rem 0 1rem;\r\n  font-size: 1rem;\r\n  background: #fff;\r\n  border: 1px solid #dfdfe0;\r\n  border-radius: 3px;\r\n  outline: none;\r\n`\r\n\r\nconst PostEditor = styled.div`\r\n  margin: .8rem 0 1rem;\r\n`\r\n\r\nconst SubmitBtn = styled.button`\r\n  font-size: .9rem;\r\n  padding: .3rem 1rem;\r\n  width: 100%;\r\n  margin-top: .5rem;\r\n  /* background-color: #a29bfe; */\r\n  background-color: #428bca;\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 2px #666;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n\r\n  &:active {\r\n    transform: translate(2px, 2px);\r\n    box-shadow: none;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nconst schema = yup.object({\r\n  title: yup.string().required(),\r\n}).required()\r\n\r\n\r\nconst NewPostPage = () => {\r\n  const [body, setBody] = useState('')\r\n  const history = useHistory()\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n    const { title } = data\r\n\r\n    toast.promise(\r\n      addPost(title, body),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            if (!data?.id) return data?.message\r\n            history.push('/')\r\n            return 'Post Successful !'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            history.push('/')\r\n            return data?.message || 'Post Fail !'\r\n          }\r\n        }\r\n      }, { autoClose: 3000 }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <H2>New Post</H2>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <Label>\r\n          Title:\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Please input title...\"\r\n            $danger={errors.title}\r\n            {...register(\"title\")}\r\n          />\r\n        </Label>\r\n        <Label>Content:</Label>\r\n        <PostEditor>\r\n          <MDEditor\r\n            value={body}\r\n            onChange={setBody}\r\n            autoFocus\r\n            toolbarHeight=\"50px\"\r\n            preview=\"edit\"\r\n          />\r\n        </PostEditor>\r\n        <SubmitBtn>Submit</SubmitBtn>\r\n      </Form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NewPostPage\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, .5);\r\n  backdrop-filter: blur(2px);\r\n  transition: all .2s;\r\n  z-index: 99;\r\n`\r\n\r\nconst Modal = ({ children }) => (\r\n  <Wrapper>\r\n    {children}\r\n  </Wrapper>\r\n)\r\n\r\n\r\nexport default Modal\r\n","import styled from '@emotion/styled'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTags } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport MDEditor from '@uiw/react-md-editor'\r\n\r\nimport { getFormattedTime, getUserFromList } from '../../utils'\r\nimport {\r\n  PostContainer as Container,\r\n  PostHead,\r\n  PostBody,\r\n  PostTitle,\r\n  PostInfo,\r\n  PostAuthor,\r\n  PostDate,\r\n  PostTag,\r\n} from '../../styles/PostStyle'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst PostContainer = styled(Container)`\r\n  margin: .5rem 0 1rem;\r\n  width: 100%;\r\n  user-select: none;\r\n`\r\n\r\nconst Post = ({ post, userList }) => {\r\n  const { id, title, body, userId, createdAt } = post\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostHead>\r\n        <PostTitle to={`/post/${id}`}>{title}</PostTitle>\r\n        <PostInfo>\r\n          <PostDate>\r\n            <FontAwesomeIcon icon={faCalendarAlt} />\r\n            {getFormattedTime(createdAt)}\r\n          </PostDate>\r\n          <PostAuthor>\r\n            <FontAwesomeIcon icon={faUserAlt} />\r\n            {getUserFromList(userList, userId)?.username}\r\n          </PostAuthor>\r\n          <PostTag>\r\n            <FontAwesomeIcon icon={faTags} />\r\n            Lidemy Student\r\n          </PostTag>\r\n        </PostInfo>\r\n      </PostHead>\r\n      <PostBody>\r\n        <MDEditor.Markdown source={body} />\r\n      </PostBody>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport { AuthContext } from '../../context'\r\nimport Post from './Post'\r\n\r\n\r\nconst FetchPost = ({ postId }) => {\r\n  const history = useHistory()\r\n  const { userList } = useContext(AuthContext)\r\n  const { loading, error, data } = useFetch(`${process.env.REACT_APP_BASE_URL}/posts/${postId}`)\r\n  const toastId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    loading ? (toastId.current = toast.loading('loading...')) : toast.dismiss(toastId.current)\r\n    return () => toast.dismiss(toastId.current)\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Can\\t found post')\r\n      history.push('/')\r\n    }\r\n  }, [error, history])\r\n\r\n  return (\r\n    !loading && <Post post={data} userList={userList} />\r\n  )\r\n}\r\n\r\nexport default FetchPost\r\n","import { useCallback, useContext, useMemo } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { toast } from 'react-toastify'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport Modal from '../../components/Modal'\r\nimport { AuthContext } from '../../context'\r\nimport Post from './Post'\r\nimport FetchPost from './FetchPost'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  font-size: .8rem;\r\n  max-height: calc(100vh - 100px);\r\n  width: 960px;\r\n  padding: 0rem 1.25rem;\r\n  margin: 4rem 0 0;\r\n  border-radius: 10px;\r\n  background: #eee;\r\n  /* box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0px 0 1px rgb(10 10 10 / 2%); */\r\n`\r\n\r\nconst Nav = styled.nav`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 0 -.5rem;\r\n  font-size: 1.4rem;\r\n  a {\r\n    cursor: pointer;\r\n  }\r\n  path {\r\n    color: #333;\r\n    transition: all .1s;\r\n    &:hover {\r\n      color: #666;\r\n      transform: scale(1.1)\r\n    }\r\n  }\r\n`\r\n\r\nconst ArrowGroup = styled.div`\r\n`\r\n\r\nconst ArrowLeftBtn = styled.a`\r\n  ${({ $disable }) => $disable && `\r\n    path {\r\n      color: #ccc;\r\n    }\r\n  `}\r\n`\r\n\r\nconst ArrowRightBtn = styled.a`\r\n  margin-left: 1rem;\r\n  ${({ $disable }) => $disable && `\r\n    path {\r\n      color: #ccc;\r\n    }\r\n  `}\r\n`\r\n\r\nconst CloseBtn = styled(Link)`\r\n  font-size: 1.6rem;\r\n`\r\n\r\nconst PostPage = ({ history, location }) => {\r\n  const { userList, postData } = useContext(AuthContext)\r\n  const { id } = useParams()\r\n\r\n  const postIndex = useMemo(() => postData.findIndex(post => Number(id) === post.id), [postData, id])\r\n  const post = postData[postIndex]\r\n\r\n  const handlePreviousPost = useCallback(() => {\r\n    if (postIndex >= postData.length - 1) {\r\n      toast.dismiss()\r\n      toast.warn('已經是最古老的文章了！', { autoClose: 1000, hideProgressBar: true })\r\n      return\r\n    }\r\n    history.push(`${postData[postIndex + 1].id}`)\r\n  }, [history, postIndex, postData])\r\n\r\n  const handleNextPost = useCallback(() => {\r\n    if (postIndex <= 0) {\r\n      toast.dismiss()\r\n      toast.warn('已經是最新的文章了！', { autoClose: 1000, hideProgressBar: true })\r\n      return\r\n    }\r\n    history.push(`${postData[postIndex - 1].id}`)\r\n  }, [history, postIndex, postData])\r\n\r\n  return (\r\n    <Modal>\r\n      <Container>\r\n        <Nav>\r\n          <ArrowGroup>\r\n            {postIndex !== -1 && (\r\n              <>\r\n                <ArrowLeftBtn $disable={postIndex >= postData.length - 1} onClick={handlePreviousPost}>\r\n                  <FontAwesomeIcon icon={faArrowLeft} />\r\n                </ArrowLeftBtn>\r\n                <ArrowRightBtn $disable={postIndex <= 0} onClick={handleNextPost}>\r\n                  <FontAwesomeIcon icon={faArrowRight} />\r\n                </ArrowRightBtn>\r\n              </>\r\n            )}\r\n          </ArrowGroup>\r\n          <CloseBtn to='/'>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </CloseBtn>\r\n        </Nav>\r\n        {post ? <Post post={post} userList={userList} /> : <FetchPost postId={id} />}\r\n      </Container>\r\n    </Modal >\r\n  )\r\n}\r\n\r\nexport default PostPage\r\n","import { useContext, useEffect, useRef } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport { AuthContext } from '../../context'\r\nimport { getFormattedTime, getUserFromList } from '../../utils'\r\nimport { removePostById } from '../../WebAPI'\r\n\r\n\r\nconst Table = styled.table`\r\n  font-size: .8rem;\r\n  margin: 2rem 0 1rem;\r\n  border-collapse: collapse;\r\n  text-indent: initial;\r\n  border-spacing: 2px;\r\n  width: 100%;\r\n  background: #fff;\r\n\r\n  th, td {\r\n    border: 2px solid #dfdfe0;\r\n  }\r\n\r\n  th {\r\n    background: #428bca;\r\n    color: #FFF;\r\n    padding: 8px 0;\r\n  }\r\n\r\n  td {\r\n    padding: 4px 20px;\r\n  }\r\n`\r\n\r\nconst TitleLink = styled(Link)`\r\n  color: #428bca;\r\n  font-weight: 700;\r\n`\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  padding: 4px 6px;\r\n  background-color: #888;\r\n  border: transparent;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst ConsolePage = () => {\r\n  const { userList } = useContext(AuthContext)\r\n  const history = useHistory()\r\n  const toastId = useRef(null)\r\n  const { loading, error, data = [] } = useFetch(`https://student-json-api.lidemy.me/posts?_sort=createdAt&_order=desc`)\r\n  const handleDeletePost = async (id) => {\r\n    if (!window.confirm('Are you sure delete this post ?')) return\r\n    toast.promise(\r\n      removePostById(id),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            history.go(0)\r\n            return 'Delete Successful !'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            return 'Delete Fail !'\r\n          }\r\n        }\r\n      }, { autoClose: 3000 }\r\n    )\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (loading) {\r\n      (toastId.current = toast.loading('loading...'))\r\n    }\r\n    else {\r\n      toast.dismiss(toastId.current)\r\n    }\r\n    return () => toast.dismiss(toastId.current)\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (error) toast.error('Network error')\r\n  }, [error])\r\n\r\n  return (\r\n    !loading &&\r\n    <>\r\n      <Table col={5}>\r\n        <thead>\r\n          <tr>\r\n            <th>No.</th>\r\n            <th>Title</th>\r\n            <th>Author</th>\r\n            <th>Date</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            data.map(({ id, title, userId, createdAt }, index) => (\r\n              <tr key={id}>\r\n                <td>{index + 1}</td>\r\n                <td>\r\n                  <TitleLink to={`/post/${id}`} title={title} >\r\n                    {title.length < 8 ? title : `${title.substring(0, 8)}...`}\r\n                  </TitleLink>\r\n                </td>\r\n                <td>{getUserFromList(userList, userId)?.username.substring(0, 8)}</td>\r\n                <td>{getFormattedTime(createdAt)}</td>\r\n                <td>\r\n                  <Button onClick={() => handleDeletePost(id)}>刪除</Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ConsolePage\r\n","import React from 'react'\r\n\r\nconst NotFoundPage = () => (\r\n  <h1>Not Found Page</h1>\r\n);\r\n\r\nexport default NotFoundPage","import React from 'react'\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport HomePage from '../pages/HomePage'\r\nimport AboutPage from '../pages/AboutPage'\r\nimport NewPostPage from '../pages/NewPostPage'\r\nimport PostPage from '../pages/PostPage'\r\nimport ConsolePage from '../pages/ConsolePage'\r\nimport NotFoundPage from '../pages/NotFoundPage'\r\n\r\n\r\nconst RouteSwitch = () => (\r\n  <Switch>\r\n    <Route path='/' exact component={HomePage} />\r\n    <Route path='/about' component={AboutPage} />\r\n    <Route path='/new_post' component={NewPostPage} />\r\n    <Route path='/post/:id([1-9]|[1-9]*[0-9]+)' component={PostPage} />\r\n    <Route path='/console' component={ConsolePage} />\r\n    <Route path='*' component={NotFoundPage} />\r\n  </Switch>\r\n)\r\n\r\nexport default RouteSwitch\r\n","import { useState, useCallback } from 'react'\r\n\r\n\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState)\r\n  const toggle = useCallback(() => setState(state => !state), [])\r\n\r\n  return [state, toggle]\r\n}\r\n\r\nexport default useToggle\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst H2 = styled.h2`\r\n  margin: 2rem 0 0;\r\n  text-align: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  margin: 1.5rem 0 1rem;\r\n`\r\n\r\nconst InputField = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: .75rem 0 .75rem;\r\n`\r\n\r\nconst InputLabel = styled.div`\r\n  font-size: .85rem;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  padding: .7rem .7rem .5rem;\r\n  color: #aaa;\r\n  transition: transform 0.1s;\r\n  pointer-events: none;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-size: .9rem;\r\n  width: 100%;\r\n  border: 1px #dbdbdb solid;\r\n  border: 1px solid transparent;\r\n  border-radius: 5px;\r\n  padding: 1rem .7rem .4rem;\r\n  margin: 0 0 .6rem;\r\n  outline: none;\r\n  letter-spacing: 0.5px;\r\n  background: #f1f5ff;\r\n  color: #363636;\r\n  box-shadow: inset 0 0.0625em 0.125em rgb(10 10 10 / 5%);\r\n\r\n  &:placeholder-shown::placeholder {\r\n    color: transparent;\r\n  }\r\n  &:focus {\r\n    box-shadow: 1px 1px 1px #ccc;\r\n  }\r\n  &:focus + ${InputLabel}, &:not(:placeholder-shown) + ${InputLabel} {\r\n    color: #757575;\r\n    transform: scale(0.75) translate(-18px, -22px);\r\n  }\r\n  ${({ $danger }) => $danger && `\r\n    border-color: #f02849;\r\n  `}\r\n`\r\n\r\nconst CheckboxField = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 1.25rem 0 .75rem;\r\n`\r\n\r\nconst CheckboxLabel = styled.label`\r\n  display: grid;\r\n  grid-template-columns: 1rem auto;\r\n  gap: 0.5em;\r\n  line-height: 1.2;\r\n  font-size: 13px;\r\n  color: #757575;\r\n  font-weight: 500;\r\n  margin: 10px 0px 25px;\r\n  cursor: pointer;\r\n\r\n  ${({ $danger }) => $danger && `\r\n    color: #f02849;\r\n  `}\r\n`\r\n\r\nconst Checkbox = styled.input`\r\n  transform: translate(3px, 3px);\r\n`\r\n\r\nconst ErrorMsg = styled.p`\r\n  font-size: .6rem;\r\n  font-weight: 500;\r\n  position: absolute;\r\n  bottom: -.5rem;\r\n  width: 100%;\r\n  text-align: right;\r\n  color: #f02849;\r\n`\r\n\r\nconst SubmitBtn = styled.button`\r\n  font-size: .9rem;\r\n  padding: .3rem 1rem;\r\n  width: 100%;\r\n  margin-top: .5rem;\r\n  /* background-color: #a29bfe; */\r\n  background-color: #428bca;\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 2px #666;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n\r\n  &:active {\r\n    transform: translate(2px, 2px);\r\n    box-shadow: none;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nconst Note = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  p {\r\n    color: #aaa;\r\n  }\r\n\r\n  button {\r\n    position: relative;\r\n    font-weight: 500;\r\n    /* color: #a29bfe; */\r\n    color: #428bca;\r\n    background: transparent;\r\n    margin-left: 10px;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      right: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 2px;\r\n      /* background: #a29bfe; */\r\n      background: #428bca;\r\n      transition: width 1s .2s;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  CheckboxField,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n}\r\n","import { useContext } from 'react'\r\n\r\nimport decode from 'jwt-decode'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { AuthContext } from '../../../context'\r\nimport { setAuthToken } from '../../../utils'\r\nimport { login } from '../../../WebAPI'\r\nimport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n} from '../../../styles/FormStyle'\r\n\r\n\r\nconst schema = yup.object({\r\n  username: yup.string().required(),\r\n  password: yup.string().min(6).max(18).required(),\r\n}).required()\r\n\r\nconst LoginForm = ({ toggleModal, switchForm }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = async ({ username, password }) => {\r\n    toast.promise(\r\n      login(username, password),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            if (data?.ok !== 1) return data?.message\r\n            const { token } = data\r\n            setAuthToken(token)\r\n            setUser(decode(token))\r\n            toggleModal()\r\n            return `Hi, ${username} welcome` || 'Login success  👌'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            reset()\r\n            return data?.message || 'Login rejected 🤯'\r\n          }\r\n        }\r\n      }, { autoClose: 3000 }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <H2>Log into Blog</H2>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.username}\r\n            {...register(\"username\")}\r\n          />\r\n          <InputLabel>Username</InputLabel>\r\n          {errors.username && <ErrorMsg>{errors.username.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.password}\r\n            {...register(\"password\")}\r\n          />\r\n          <InputLabel>Password</InputLabel>\r\n          {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n        </InputField>\r\n        <SubmitBtn>Log In</SubmitBtn>\r\n      </Form>\r\n      <Note>\r\n        <p>Don't have an account?</p>\r\n        <button onClick={switchForm} >Sign up</button>\r\n      </Note>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useContext } from 'react'\r\n\r\nimport decode from 'jwt-decode'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport { AuthContext } from '../../../context'\r\nimport { setAuthToken } from '../../../utils'\r\nimport { singUp } from '../../../WebAPI'\r\nimport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  CheckboxField,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n} from '../../../styles/FormStyle'\r\n\r\n\r\nconst schema = yup.object({\r\n  nickname: yup.string().min(2).max(8).matches(/^[A-Za-z]{1}[A-Za-z0-9]+$/, 'Must be word or number').required(),\r\n  username: yup.string().min(4).max(8).matches(/^[A-Za-z]{1}[A-Za-z0-9]+$/, 'Must be word or number').required(),\r\n  password: yup.string().min(6).max(12).required(),\r\n  confirmPassword: yup.string().min(6).max(12).oneOf([yup.ref('password'), null], 'Passwords must be match').required(),\r\n  checkRules: yup.boolean().oneOf([true], '(must be required)'),\r\n}).required()\r\n\r\nconst LoginForm = ({ toggleModal, switchForm }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = async ({ nickname, username, password }) => {\r\n    toast.promise(\r\n      singUp(nickname, username, password),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            if (data?.ok !== 1) return data?.message\r\n            const { token } = data\r\n            setAuthToken(token)\r\n            setUser(decode(token))\r\n            toggleModal()\r\n            return `Hi, ${username} welcome` || 'Register success 👌'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            reset()\r\n            return data?.message || 'Register rejected 🤯'\r\n          }\r\n        }\r\n      }, { autoClose: 3000 }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <H2>Create an account</H2>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.nickname}\r\n            {...register(\"nickname\")}\r\n          />\r\n          <InputLabel>Nickname</InputLabel>\r\n          {errors.nickname && <ErrorMsg>{errors.nickname.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.username}\r\n            {...register(\"username\")}\r\n          />\r\n          <InputLabel>Username</InputLabel>\r\n          {errors.username && <ErrorMsg>{errors.username.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.password}\r\n            {...register(\"password\")}\r\n          />\r\n          <InputLabel>Password</InputLabel>\r\n          {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.confirmPassword}\r\n            {...register(\"confirmPassword\")}\r\n          />\r\n          <InputLabel>Confirm Password</InputLabel>\r\n          {errors.confirmPassword && <ErrorMsg>{errors.confirmPassword.message}</ErrorMsg>}\r\n        </InputField>\r\n        <CheckboxField>\r\n          <CheckboxLabel $danger={errors.checkRules}>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              $danger={errors.checkRules}\r\n              {...register(\"checkRules\")}\r\n            />\r\n            By creating account, you agree to accept our Privacy Policy, Terms\r\n            of Service and Notification settings. {errors.checkRules && errors.checkRules.message}\r\n          </CheckboxLabel>\r\n        </CheckboxField>\r\n        <SubmitBtn>Sing Up</SubmitBtn>\r\n      </Form>\r\n      <Note>\r\n        <p>Already have an account?</p>\r\n        <button onClick={switchForm} >Log in</button>\r\n      </Note>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import styled from '@emotion/styled/macro'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport useToggle from '../../../hooks/useToggle'\r\nimport Modal from '../../Modal'\r\nimport LoginForm from './LoginForm'\r\nimport RegisterForm from './RegisterForm'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  font-size: .8rem;\r\n  width: 400px;\r\n  padding: 1.5rem 1.25rem 1.25rem;\r\n  margin: 3rem 0 0;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0px 0 1px rgb(10 10 10 / 2%);\r\n  user-select: none;\r\n`\r\n\r\nconst BackBtn = styled.div`\r\n  font-size: .7rem;\r\n  position: absolute;\r\n  top: 32px;\r\n  left: 28px;\r\n  cursor: pointer;\r\n\r\n  & span {\r\n    margin-left: 10px;\r\n  }  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -4px;\r\n    right: 0;\r\n    left: 0;\r\n    width: 0%;\r\n    height: 2px;\r\n    /* background: #a29bfe; */\r\n    background: #428bca;\r\n    transition: width 1s .2s;\r\n  }\r\n  &:hover {\r\n    font-weight: 700;\r\n  }\r\n  &:hover::after {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst FormModal = ({ handleToggle }) => {\r\n  const [isLoginForm, toggleForm] = useToggle(true)\r\n\r\n  return (\r\n    <Modal>\r\n      <Wrapper>\r\n        <BackBtn onClick={handleToggle}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          <span>Back</span>\r\n        </BackBtn>\r\n        {\r\n          isLoginForm ?\r\n            <LoginForm toggleModal={handleToggle} switchForm={toggleForm} /> :\r\n            <RegisterForm toggleModal={handleToggle} switchForm={toggleForm} />\r\n        }\r\n      </Wrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FormModal\r\n","import { useContext } from 'react'\r\n\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport styled from '@emotion/styled/macro'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useToggle from '../../hooks/useToggle'\r\nimport FormModal from './FormModal'\r\nimport { AuthContext } from '../../context'\r\nimport { clearAuthToken } from '../../utils'\r\n\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Nav = styled(NavLink, {\r\n  activeClassName: 'active',\r\n})`\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 2px 12px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  color: #999;\r\n  text-decoration: none;\r\n  user-select: none;\r\n\r\n  & + & {\r\n    margin-left: 6px;\r\n  }\r\n  &.active {\r\n    color: #000;\r\n  }\r\n  &:hover {\r\n    color: #444;\r\n    background: #ddd;\r\n  }\r\n`\r\n\r\nconst Span = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  margin-right: 1rem;\r\n  user-select: none;\r\n`\r\n\r\nconst UserBtn = styled.button`\r\n  font-size: .8rem;\r\n  font-weight: 700;\r\n  padding: 2px 8px;\r\n  /* background-color: #a29bfe; */\r\n  /* background-color: #1877f2; */\r\n  background-color: #428bca;\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 2px #666;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  transition: all .3s;\r\n\r\n  &:active {\r\n    transform: translate(2px, 2px);\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst Header = () => {\r\n  const [isModalOpen, toggleModal] = useToggle()\r\n  const history = useHistory()\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const handleLogout = () => {\r\n    clearAuthToken()\r\n    setUser(null)\r\n    toast.warn('Logout success !', { autoClose: 3000 })\r\n    history.go(0)\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      {isModalOpen && <FormModal handleToggle={toggleModal} />}\r\n      <NavbarList>\r\n        <Nav exact to=\"/\">Home</Nav>\r\n        {user && <Nav to=\"/new_post\">Post</Nav>}\r\n        {user && <Nav to=\"/console\">Console</Nav>}\r\n        <Nav to=\"/about\">About</Nav>\r\n      </NavbarList>\r\n      <div>\r\n        {user?.username && <Span>{'Hi ' + user.username}</Span>}\r\n        {user ? <UserBtn onClick={handleLogout}>log out</UserBtn> : <UserBtn onClick={toggleModal}>login</UserBtn>}\r\n      </div>\r\n    </HeaderContainer >\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst FooterContainer = styled.footer`\r\n  font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n  font-size: .8rem;\r\n  padding: 16px 0 0;\r\n  text-align: center;\r\n  user-select: none;\r\n  \r\n  a {\r\n    font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n    font-style: italic;\r\n    color: #74b9ff;\r\n  }\r\n`\r\n\r\nconst Footer = () => (\r\n  <FooterContainer>\r\n    &copy; copyright 2021 by <a href={`https://github.com/CoolizzLuo`} target=\"_blank\" rel=\"noreferrer\">Enzo</a>\r\n  </FooterContainer>\r\n)\r\n\r\n\r\nexport default Footer\r\n","import { useState, useLayoutEffect } from 'react'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport RouteSwitch from './components/RouteSwitch'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { AuthContext } from './context'\r\nimport { getUsers, getMe } from './WebAPI'\r\nimport { getAuthToken } from './utils'\r\n\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 0 30px;\r\n  max-width: 960px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  width: 100%;\r\n  /* height: calc(100vh - 204px); */\r\n  height: calc(100vh - 48px - 53px - .5rem);\r\n  overflow: overlay;\r\n  margin: 24px 0 0;\r\n  padding: 0 1rem;\r\n  /* padding: 24px 0 0; */\r\n`\r\n\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [userList, setUserList] = useState([])\r\n  const [postData, setPostData] = useState([])\r\n  const token = getAuthToken()\r\n\r\n  useLayoutEffect(() => {\r\n    getMe().then((res) => {\r\n      if (res.ok !== 1) return\r\n      setUser(res.data)\r\n    })\r\n  }, [token])\r\n\r\n  useLayoutEffect(() => {\r\n    getUsers().then((res) => {\r\n      // if (res.ok !== 1) return\r\n      setUserList(res)\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, userList, setUserList, postData, setPostData }}>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnVisibilityChange\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Layout>\r\n        <Router>\r\n          <Header />\r\n          <Container>\r\n            <RouteSwitch />\r\n          </Container>\r\n          <Footer />\r\n        </Router>\r\n      </Layout>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Global, css } from '@emotion/react'\r\nimport GlobalStyle from './styles/GlobalStyle'\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Global styles={css`${GlobalStyle}`} />\r\n    <App />\r\n  </React.StrictMode>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}