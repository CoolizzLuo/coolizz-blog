{"version":3,"sources":["styles/GlobalStyle.js","utils.js","WebAPI.js","hooks/useAsync.js","hooks/useFetch.js","context.js","pages/HomePage/FetchPosts.js","pages/HomePage/HomePage.js","pages/AboutPage.js","pages/NewPostPage.js","pages/PostPage/FetchPost.js","pages/PostPage/PostPage.js","commons/axios.js","pages/LoginPage.js","pages/NotFoundPage/NotFoundPage.js","components/RouteSwitch.js","hooks/useToggle.js","components/Modal.js","components/Header/FormModal/FormStyle.js","components/Header/FormModal/LoginForm.js","components/Header/FormModal/RegisterForm.js","components/Header/FormModal/FormModal.js","components/Header/Header.js","components/Footer.js","App.js","index.js"],"names":["GlobalStyles","css","TOKEN_NAME","setAuthToken","token","localStorage","setItem","getAuthToken","getItem","BASE_URL","getUsers","a","fetch","then","res","json","getMe","headers","useAsync","callback","dependencies","useState","loading","setLoading","error","setError","data","setData","callbackMemoized","useCallback","undefined","catch","finally","useEffect","DEFAULT_OPTIONS","useFetch","url","options","ok","Promise","reject","AuthContext","createContext","library","add","fab","PostContainer","styled","article","PostHead","header","PostBody","section","PostTitle","Link","PostInfo","div","PostAuthor","span","PostDate","PostTag","ReadMoreBtn","Post","post","userList","id","title","body","userId","createdAt","postBody","split","slice","join","to","icon","faCalendarAlt","Date","toLocaleString","hour12","faUserAlt","find","user","userParser","username","faTags","length","substr","FetchPosts","page","useContext","toastId","useRef","current","toast","dismiss","map","Wrapper","HomePage","Container","AboutPage","NewPostPage","FetchPost","console","log","PostPage","useHistory","history","useParams","axios","baseURL","instance","_axios","create","timeout","interceptors","request","use","config","LoginWrapper","Form","form","Label","label","Input","input","$danger","ErrorMsg","p","Button","button","LoginPage","useForm","register","handleSubmit","errors","formState","setUser","onSubmit","password","promise","pending","success","render","message","tokenUser","decode","push","response","type","placeholder","required","minLength","value","NotFoundPage","RouteSwitch","path","exact","component","useToggle","initialState","state","setState","toggle","Modal","children","H2","InputField","InputLabel","CheckboxField","CheckboxLabel","Checkbox","SubmitBtn","Note","schema","yup","min","max","LoginForm","toggleModal","switchForm","resolver","yupResolver","reset","autoClose","onClick","nickname","confirmPassword","oneOf","checkRules","BackBtn","FormModal","handleToggle","isLoginForm","toggleForm","faArrowLeft","RegisterForm","HeaderContainer","NavbarList","Nav","NavLink","activeClassName","Span","UserBtn","Header","isModalOpen","removeItem","warn","FooterContainer","Footer","href","target","rel","Layout","App","setUserList","useLayoutEffect","Provider","position","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnVisibilityChange","draggable","pauseOnHover","ReactDOM","StrictMode","styles","GlobalStyle","document","getElementById"],"mappings":"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","file":"static/js/main.ad1ef69f.chunk.js","sourcesContent":["import { css } from '@emotion/react'\r\n\r\n\r\nconst GlobalStyles = css`\r\n  @font-face {\r\n    font-family: Cyber;\r\n    src: url(\"https://assets.codepen.io/605876/Blender-Pro-Bold.otf\");\r\n    font-display: swap;\r\n  }\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    /* font-family: \"Cyber\", Futura, sans-serif; */\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n    box-sizing: border-box;\r\n    color: #333;\r\n  }\r\n  \r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n    -webkit-border-radius: 10px;\r\n    border-radius: 10px;\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    -webkit-border-radius: 4px;\r\n    border-radius: 4px;\r\n    background: rgb(219,219,219);\r\n  }\r\n\r\n  html {\r\n    font-size: 20px;\r\n    background: whitesmoke;\r\n  }\r\n\r\n  body {\r\n    margin: 32px 0 0;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n\r\n  input {\r\n    font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n  }\r\n`\r\n\r\nexport default GlobalStyles\r\n","const TOKEN_NAME = 'token'\r\n\r\n\r\nconst setAuthToken = (token) => localStorage.setItem(TOKEN_NAME, token)\r\nconst getAuthToken = () => localStorage.getItem(TOKEN_NAME)\r\nconst clearAuthToken = () => localStorage.removeItem(TOKEN_NAME)\r\n\r\nexport { setAuthToken, getAuthToken, clearAuthToken }","import { getAuthToken } from './utils'\r\n\r\n\r\nconst BASE_URL = 'https://student-json-api.lidemy.me'\r\n\r\nconst getUsers = async () => {\r\n  return fetch(`${BASE_URL}/users`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getPosts = async () => {\r\n  return fetch(`${BASE_URL}/posts?_sort=createdAt&_order=desc`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getPostById = async (id) => {\r\n  return fetch(`${BASE_URL}/posts?id=${id}`)\r\n    .then(res => res.json())\r\n}\r\n\r\nconst login = async (username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      username,\r\n      password\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst singUp = async (nickname, username, password) => {\r\n  return fetch(`${BASE_URL}/login`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json'\r\n    },\r\n    body: JSON.stringify({\r\n      nickname,\r\n      username,\r\n      password\r\n    })\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nconst getMe = async () => {\r\n  const token = getAuthToken()\r\n\r\n  return fetch(`${BASE_URL}/me`, {\r\n    headers: {\r\n      'authorization': `Bearer ${token}`\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n}\r\n\r\nexport {\r\n  getUsers,\r\n  getPosts,\r\n  getPostById,\r\n  login,\r\n  singUp,\r\n  getMe\r\n}\r\n","import { useCallback, useEffect, useState } from 'react'\r\n\r\n\r\nconst useAsync = (callback, dependencies = []) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [data, setData] = useState()\r\n\r\n  const callbackMemoized = useCallback(() => {\r\n    setLoading(true)\r\n    setError(undefined)\r\n    setData([])\r\n    callback()\r\n      .then(setData)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false))\r\n  }, dependencies)\r\n\r\n  useEffect(() => {\r\n    callbackMemoized()\r\n  }, [callbackMemoized])\r\n\r\n  return { loading, error, data }\r\n}\r\nexport default useAsync\r\n","import useAsync from './useAsync'\r\n\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  headers: { 'Content-Type': 'application/json' },\r\n}\r\n\r\nconst useFetch = (url, options = {}, dependencies = []) => {\r\n\r\n  return useAsync(() => {\r\n    return fetch(url, { ...DEFAULT_OPTIONS, ...options }).then(res => {\r\n      if (res.ok) return res.json()\r\n      return res.json().then(json => Promise.reject(json))\r\n    })\r\n  }, dependencies)\r\n}\r\n\r\nexport default useFetch\r\n","import { createContext } from 'react'\r\n\r\nexport const AuthContext = createContext(null)\r\n\r\nexport const LoadingContext = createContext(false)","import { useContext, useEffect, useRef } from 'react'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'react-router-dom'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faCalendarAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { faTags } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport { AuthContext } from '../../context'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst PostContainer = styled.article`\r\n  position: relative;\r\n  background: #fff;\r\n  padding: 1.4rem 1.6rem;\r\n  margin: 2rem 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n  border-radius: 6px;\r\n  box-shadow: 0 1px 2px rgb(0 0 0 / 10%);\r\n\r\n  /* & + & {\r\n    border-top: 1px solid rgba(0, 12, 34, 0.2);\r\n  } */\r\n`\r\n\r\nconst PostHead = styled.header`\r\n  width: 100%;\r\n  text-align: left;\r\n  border-bottom: 1px solid rgba(0, 12, 34, 0.2);\r\n`\r\n\r\nconst PostBody = styled.section`\r\n  font-size: .8rem;\r\n  margin: 1rem 0;\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  display: block;\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  color: #428bca;\r\n  text-decoration: none;\r\n  overflow: hidden;\r\n`\r\n\r\nconst PostInfo = styled.div`\r\n  display: flex;\r\n  font-size: .6rem;\r\n  padding: .4rem 0;\r\n\r\n  path, span {\r\n    color: #aaa;\r\n  }\r\n\r\n  svg {\r\n    margin-right: .2rem;\r\n  }\r\n\r\n  span {\r\n    margin-right: .8rem;\r\n  }\r\n`\r\n\r\nconst PostAuthor = styled.span`\r\n  font-weight: 500;\r\n`\r\n\r\nconst PostDate = styled.span`\r\n`\r\n\r\nconst PostTag = styled.span`\r\n\r\n`\r\n\r\nconst ReadMoreBtn = styled(Link)`\r\n  position: absolute;\r\n  right: 1.6rem;\r\n  bottom: 1.4rem;\r\n  font-size: .6rem;\r\n  color: #338ccc;\r\n`\r\n\r\nconst Post = ({ post, userList }) => {\r\n  const { id, title, body, userId, createdAt } = post\r\n  const postBody = body.split('\\n').slice(0, 2).join(' ')\r\n\r\n  const timeParser = (time) => new Date(createdAt).toLocaleString('zh-TW', { hour12: false })\r\n  const userParser = (userId) => userList.find((user) => user.id === userId)\r\n\r\n  return (\r\n    <PostContainer>\r\n      <PostHead>\r\n        <PostTitle to={`/post/${id}`}>{title}</PostTitle>\r\n        <PostInfo>\r\n          <PostDate>\r\n            <FontAwesomeIcon icon={faCalendarAlt} />\r\n            {timeParser(createdAt)}\r\n          </PostDate>\r\n          <PostAuthor>\r\n            <FontAwesomeIcon icon={faUserAlt} />\r\n            {userParser(userId)?.username}\r\n          </PostAuthor>\r\n          <PostTag>\r\n            <FontAwesomeIcon icon={faTags} />\r\n            Test\r\n          </PostTag>\r\n        </PostInfo>\r\n      </PostHead>\r\n      <PostBody>\r\n        {postBody.length > 30 ? `${postBody.substr(0, 30)}...` : postBody}\r\n      </PostBody>\r\n      <ReadMoreBtn to={`/post/${id}`}>Read More</ReadMoreBtn>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nconst FetchPosts = ({ page = 1 }) => {\r\n  const { userList } = useContext(AuthContext)\r\n  // const { loading, error, data } = useFetch(`https://student-json-api.lidemy.me/posts?_sort=createdAt&_order=desc`)\r\n  const { loading, error, data } = useFetch(`https://student-json-api.lidemy.me/posts?_page=${page}&_limit=5&_sort=createdAt&_order=desc`)\r\n  const toastId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    loading ? (toastId.current = toast.loading('loading...')) : toast.dismiss(toastId.current)\r\n    return () => toast.dismiss(toastId.current)\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (error) toast.error('Network error')\r\n  }, [error])\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {data && data.map(post => <Post key={post.id} post={post} userList={userList} />)}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FetchPosts\r\n","import { useState, useEffect } from 'react'\r\n\r\nimport styled from '@emotion/styled'\r\n\r\nimport { getPosts } from '../../WebAPI'\r\nimport FetchPosts from './FetchPosts'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  padding: 0 .5rem;\r\n`\r\n\r\nconst HomePage = () => {\r\n  const [posts, setPosts] = useState([])\r\n\r\n  useEffect(() => {\r\n    // getPosts().then(setPosts)\r\n  }, []);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <FetchPosts />\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import styled from '@emotion/styled'\r\n\r\n\r\nconst Container = styled.div`\r\n  width: 80%;\r\n  margin: 2rem auto 0;\r\n  font-size: calc(20px + 0.33vw);\r\n  text-align: left;\r\n`\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <Container>\r\n      <h1>Hello.</h1>\r\n      <h3>My name is Enzo Luo.</h3>\r\n      <p>I am an operator engineer and good at JavaScript.</p>\r\n      <p>If you happen to speak Chinese, my Chinese name is (Luo Shih Jie). You can also find me on Twitter and Github.</p>\r\n      <p>Outside of programming and helping my wife take care of our two kids, I enjoy video games, karaoke, sushi and collecting watches.</p>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default AboutPage","const NewPostPage = () => {\r\n  return (\r\n    <h1>New post page</h1>\r\n  )\r\n}\r\n\r\nexport default NewPostPage","import { useEffect, useRef } from 'react'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { Link } from 'react-router-dom'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport { toast, ToastContainer } from 'react-toastify'\r\n\r\n\r\nconst PostContainer = styled.div`\r\n  padding: 1.4rem .6rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  justify-content: space-between;\r\n\r\n  & + & {\r\n    border-top: 1px solid rgba(0, 12, 34, 0.2);\r\n  }\r\n`\r\n\r\nconst PostTitle = styled(Link)`\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  color: #d04444;\r\n  text-decoration: none;\r\n  overflow: hidden;\r\n`\r\n\r\nconst PostBody = styled.div`\r\n  font-size: .8rem;\r\n  margin: 1rem 0;\r\n`\r\n\r\nconst PostInfo = styled.div`\r\n  display: flex;\r\n  font-size: .7rem;\r\n`\r\n\r\nconst PostAuthor = styled.div`\r\n  color: #d04444;\r\n  font-weight: 500;\r\n`\r\n\r\nconst PostDate = styled.div`\r\n  color: rgba(0, 0, 0, 0.8);\r\n  margin-left: .2rem;\r\n`\r\n\r\nconst Post = ({ post }) => {\r\n  const { id, title, body, userId, createdAt } = post\r\n  const postBody = body.split('\\n').slice(0, 2).join(' ')\r\n  return (\r\n    <PostContainer>\r\n      <PostTitle to={`/post/${id}`}>{title}</PostTitle>\r\n      <PostBody>{postBody.length > 30 ? `${postBody.substr(0, 30)}...` : postBody}</PostBody>\r\n      <PostInfo>\r\n        <PostAuthor>{userId}</PostAuthor>\r\n        <PostDate>{' on ' + new Date(createdAt).toLocaleDateString()}</PostDate>\r\n      </PostInfo>\r\n    </PostContainer>\r\n  )\r\n}\r\n\r\nconst FetchPost = ({ id }) => {\r\n  const { loading, error, data } = useFetch(`https://student-json-api.lidemy.me/posts/${id}`)\r\n  const toastId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    loading ? (toastId.current = toast.loading('loading...')) : toast.dismiss(toastId.current)\r\n    return () => toast.dismiss(toastId.current)\r\n  }, [loading])\r\n\r\n  useEffect(() => {\r\n    if (error) toast.error('Network error')\r\n  }, [error])\r\n\r\n  return (\r\n    <div>\r\n      {console.log(data)}\r\n      <h2>{data?.title}</h2>\r\n      <p>{data?.body}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FetchPost\r\n","import { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport styled from '@emotion/styled'\r\n\r\nimport { getPosts } from '../../WebAPI'\r\nimport FetchPost from './FetchPost'\r\n\r\n\r\nconst PostPage = () => {\r\n  const { history } = useHistory()\r\n  const { id } = useParams()\r\n  return (\r\n    <>\r\n      <FetchPost id={id} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PostPage\r\n","import _axios from 'axios'\r\nimport { getAuthToken } from '../utils'\r\n\r\nconst axios = baseURL => {\r\n  const instance = _axios.create({\r\n    baseURL: baseURL || 'https://student-json-api.lidemy.me/',\r\n    timeout: 1000\r\n  })\r\n\r\n  instance.interceptors.request.use(\r\n    (config) => {\r\n      const token = getAuthToken()\r\n      config.headers['Authorization'] = 'Bearer ' + token\r\n      // Do something before request is sent\r\n      return config\r\n    },\r\n    (error) => {\r\n      // Do something with request error\r\n      return Promise.reject(error)\r\n    }\r\n  )\r\n\r\n  return instance\r\n}\r\n\r\nexport { axios }\r\n\r\nexport default axios()\r\n","import { useContext } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport decode from 'jwt-decode'\r\nimport axios from '../commons/axios'\r\nimport { useForm } from \"react-hook-form\"\r\nimport { toast } from 'react-toastify'\r\nimport { AuthContext } from '../context'\r\nimport { setAuthToken } from '../utils'\r\n\r\n\r\n\r\nconst LoginWrapper = styled.div`\r\n  display: flex;\r\n  height: 70%;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  font-size: .8rem;\r\n  width: 350px;\r\n  padding: 1.5rem 1.5rem 2rem;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0px 0 1px rgb(10 10 10 / 2%);\r\n`\r\n\r\nconst Label = styled.label`\r\n  display: block;\r\n  text-align: left;\r\n  margin: .3rem 0;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-size: .75rem;\r\n  padding: 7px 11px;\r\n  margin-bottom: .2rem;\r\n  outline: none;\r\n  width: 100%;\r\n  max-width: 100%;\r\n  background-color: white;\r\n  border: 1px #dbdbdb solid;\r\n  border-radius: 4px;\r\n  color: #363636;\r\n  box-shadow: inset 0 0.0625em 0.125em rgb(10 10 10 / 5%);\r\n\r\n  ${({ $danger }) => $danger && `\r\n    border-color: #fa7c91;\r\n  `}\r\n`\r\n\r\nconst ErrorMsg = styled.p`\r\n  text-align: left;\r\n  color: #fa7c91;\r\n  font-weight: 300;\r\n`\r\n\r\nconst Button = styled.button`\r\n  font-size: .8rem;\r\n  padding: 7px 16px;\r\n  width: 100%;\r\n  margin-top: .5rem;\r\n  background-color: #a29bfe;\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  cursor: pointer;\r\n`\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const { register, handleSubmit, formState: { errors } } = useForm()\r\n  const { user, setUser } = useContext(AuthContext)\r\n\r\n  const onSubmit = async (data) => {\r\n    const { username, password } = data\r\n\r\n    toast.promise(\r\n      axios.post('/login', { username, password }),\r\n      {\r\n        pending: 'Login...',\r\n        success: {\r\n          render({ data }) {\r\n            if (data.data?.ok !== 1) return data.data.message\r\n            const { token } = data.data\r\n            setAuthToken(token)\r\n\r\n            const tokenUser = decode(token)\r\n            setUser(tokenUser.username)\r\n            history.push('/')\r\n            return `Hi, ${tokenUser.username} welcome` || 'Login success 👌'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            return data.response.data?.message || 'Login rejected 🤯'\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <LoginWrapper>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <Label>Username</Label>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            $danger={errors.username}\r\n            {...register(\r\n              \"username\",\r\n              { required: 'username is required' }\r\n            )}\r\n          />\r\n          {errors.username && <ErrorMsg>{errors.username.message}</ErrorMsg>}\r\n        </div>\r\n        <div>\r\n          <Label>Password</Label>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            $danger={errors.password}\r\n            {...register(\r\n              \"password\",\r\n              {\r\n                required: 'password is required',\r\n                minLength: {\r\n                  value: 6,\r\n                  message: 'cannot be less than 6 digits'\r\n                }\r\n              }\r\n            )}\r\n          />\r\n          {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n        </div>\r\n        <Button>Login</Button>\r\n      </Form>\r\n    </LoginWrapper>\r\n  )\r\n}\r\n\r\nexport default LoginPage\r\n","import React from 'react'\r\n\r\nconst NotFoundPage = () => (\r\n  <h1>Not Found Page</h1>\r\n);\r\n\r\nexport default NotFoundPage","import React from 'react'\r\n\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\nimport HomePage from '../pages/HomePage'\r\nimport AboutPage from '../pages/AboutPage'\r\nimport NewPostPage from '../pages/NewPostPage'\r\nimport PostPage from '../pages/PostPage'\r\nimport LoginPage from '../pages/LoginPage'\r\nimport NotFoundPage from '../pages/NotFoundPage'\r\n\r\n\r\nconst RouteSwitch = () => (\r\n  <Switch>\r\n    <Route path='/' exact component={HomePage} />\r\n    <Route path='/about' component={AboutPage} />\r\n    <Route path='/new_post' component={NewPostPage} />\r\n    <Route path='/post/:id' component={PostPage} />\r\n    <Route path='/login' component={LoginPage} />\r\n    <Route path='*' component={NotFoundPage} />\r\n  </Switch>\r\n)\r\n\r\nexport default RouteSwitch\r\n","import { useState, useCallback } from 'react'\r\n\r\n\r\nconst useToggle = (initialState = false) => {\r\n  const [state, setState] = useState(initialState)\r\n  const toggle = useCallback(() => setState(state => !state), [])\r\n\r\n  return [state, toggle]\r\n}\r\n\r\nexport default useToggle\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  position: fixed;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-start;\r\n  inset: 0;\r\n  background: rgba(0, 0, 0, .5);\r\n  transition: all .2s;\r\n  z-index: 99;\r\n  user-select: none;\r\n  animation: zoom-in 1s;\r\n`\r\n\r\nconst Modal = ({ children }) => (\r\n  <Wrapper>\r\n    {children}\r\n  </Wrapper>\r\n)\r\n\r\n\r\nexport default Modal\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst H2 = styled.h2`\r\n  margin: 2rem 0 0;\r\n  text-align: center;\r\n`\r\n\r\nconst Form = styled.form`\r\n  margin: 1.5rem 0 1rem;\r\n`\r\n\r\nconst InputField = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: .75rem 0 .75rem;\r\n`\r\n\r\nconst InputLabel = styled.div`\r\n  font-size: .85rem;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  padding: .7rem .7rem .5rem;\r\n  color: #aaa;\r\n  transition: transform 0.1s;\r\n  pointer-events: none;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-size: .9rem;\r\n  width: 100%;\r\n  border: 1px #dbdbdb solid;\r\n  border: 1px solid transparent;\r\n  border-radius: 5px;\r\n  padding: 1rem .7rem .4rem;\r\n  margin: 0 0 .6rem;\r\n  outline: none;\r\n  letter-spacing: 0.5px;\r\n  background: #f1f5ff;\r\n  color: #363636;\r\n  box-shadow: inset 0 0.0625em 0.125em rgb(10 10 10 / 5%);\r\n\r\n  &:placeholder-shown::placeholder {\r\n    color: transparent;\r\n  }\r\n  &:focus {\r\n    box-shadow: 1px 1px 1px #ccc;\r\n  }\r\n  &:focus + ${InputLabel}, &:not(:placeholder-shown) + ${InputLabel} {\r\n    color: #757575;\r\n    transform: scale(0.75) translate(-18px, -22px);\r\n  }\r\n  ${({ $danger }) => $danger && `\r\n    border-color: #f02849;\r\n  `}\r\n`\r\n\r\nconst CheckboxField = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 1.25rem 0 .75rem;\r\n`\r\n\r\nconst CheckboxLabel = styled.label`\r\n  display: grid;\r\n  grid-template-columns: 1rem auto;\r\n  gap: 0.5em;\r\n  line-height: 1.2;\r\n  font-size: 13px;\r\n  color: #757575;\r\n  font-weight: 500;\r\n  margin: 10px 0px 25px;\r\n  cursor: pointer;\r\n\r\n  ${({ $danger }) => $danger && `\r\n    color: #f02849;\r\n  `}\r\n`\r\n\r\nconst Checkbox = styled.input`\r\n  transform: translate(3px, 3px);\r\n`\r\n\r\nconst ErrorMsg = styled.p`\r\n  font-size: .6rem;\r\n  font-weight: 500;\r\n  position: absolute;\r\n  bottom: -.5rem;\r\n  width: 100%;\r\n  text-align: right;\r\n  color: #f02849;\r\n`\r\n\r\nconst SubmitBtn = styled.button`\r\n  font-size: .9rem;\r\n  padding: .3rem 1rem;\r\n  width: 100%;\r\n  margin-top: .5rem;\r\n  background-color: #a29bfe;\r\n  /* background-color: #1877f2; */\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 2px #666;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n\r\n  &:active {\r\n    transform: translate(2px, 2px);\r\n    box-shadow: none;\r\n  }\r\n  &:hover {\r\n    transform: scale(1.05);\r\n  }\r\n`\r\n\r\nconst Note = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  p {\r\n    color: #aaa;\r\n  }\r\n\r\n  button {\r\n    position: relative;\r\n    font-weight: 500;\r\n    color: #a29bfe;\r\n    /* color: #1877f2; */\r\n    background: transparent;\r\n    margin-left: 10px;\r\n    border: none;\r\n    cursor: pointer;\r\n\r\n    &::after {\r\n      content: '';\r\n      position: absolute;\r\n      bottom: 0;\r\n      right: 0;\r\n      left: 0;\r\n      width: 0%;\r\n      height: 2px;\r\n      background: #a29bfe;\r\n      transition: width 1s .2s;\r\n    }\r\n    &:hover::after {\r\n      width: 100%;\r\n    }\r\n  }\r\n`\r\n\r\nexport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  CheckboxField,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n}\r\n","import { useContext } from 'react'\r\n\r\nimport decode from 'jwt-decode'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from \"yup\"\r\nimport { toast } from 'react-toastify'\r\n\r\nimport axios from '../../../commons/axios'\r\nimport useFetchData from '../../../hooks/useFetchData'\r\nimport { AuthContext } from '../../../context'\r\nimport { setAuthToken } from '../../../utils'\r\nimport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n} from './FormStyle'\r\n\r\n\r\nconst schema = yup.object({\r\n  username: yup.string().required(),\r\n  password: yup.string().min(6).max(18).required(),\r\n}).required()\r\n\r\nconst LoginForm = ({ toggleModal, switchForm }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n    const { username, password } = data\r\n\r\n    toast.promise(\r\n      axios.post('/login', { username, password }),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            if (data.data?.ok !== 1) return data.data.message\r\n            const { token } = data.data\r\n            const { username } = decode(token)\r\n            setAuthToken(token)\r\n            setUser(username)\r\n            toggleModal()\r\n            return `Hi, ${username} welcome` || 'Login success 👌'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            reset()\r\n            return data.response?.data?.message || 'Login rejected 🤯'\r\n          }\r\n        }\r\n      }, { autoClose: 3000 }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <H2>Log into Blog</H2>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.username}\r\n            {...register(\"username\")}\r\n          />\r\n          <InputLabel>Username</InputLabel>\r\n          {errors.username && <ErrorMsg>{errors.username.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.password}\r\n            {...register(\"password\")}\r\n          />\r\n          <InputLabel>Password</InputLabel>\r\n          {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n        </InputField>\r\n        <SubmitBtn>Log In</SubmitBtn>\r\n      </Form>\r\n      <Note>\r\n        <p>Don't have an account?</p>\r\n        <button onClick={switchForm} >Sign up</button>\r\n      </Note>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import { useContext } from 'react'\r\n\r\nimport decode from 'jwt-decode'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport axios from '../../../commons/axios'\r\nimport { AuthContext } from '../../../context'\r\nimport { setAuthToken } from '../../../utils'\r\nimport {\r\n  H2,\r\n  Form,\r\n  InputField,\r\n  InputLabel,\r\n  Input,\r\n  CheckboxField,\r\n  CheckboxLabel,\r\n  Checkbox,\r\n  ErrorMsg,\r\n  SubmitBtn,\r\n  Note\r\n} from './FormStyle'\r\n\r\n\r\nconst schema = yup.object({\r\n  nickname: yup.string().min(2).max(8).required(),\r\n  username: yup.string().min(4).max(8).required(),\r\n  password: yup.string().min(6).max(12).required(),\r\n  confirmPassword: yup.string().min(6).max(12).oneOf([yup.ref('password'), null], 'Passwords must be match').required(),\r\n  checkRules: yup.boolean().oneOf([true], '(must be required)'),\r\n}).required()\r\n\r\nconst LoginForm = ({ toggleModal, switchForm }) => {\r\n  const { setUser } = useContext(AuthContext)\r\n  const { register, handleSubmit, reset, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema)\r\n  })\r\n\r\n  const onSubmit = async (data) => {\r\n    const { nickname, username, password } = data\r\n\r\n    toast.promise(\r\n      axios.post('/register', { nickname, username, password }),\r\n      {\r\n        pending: 'Loading...',\r\n        success: {\r\n          render({ data }) {\r\n            if (data.data?.ok !== 1) return data.data.message\r\n            const { token } = data.data\r\n            const { username } = decode(token)\r\n            setAuthToken(token)\r\n            setUser(username)\r\n            toggleModal()\r\n            return `Hi, ${username} welcome` || 'Login success 👌'\r\n          }\r\n        },\r\n        error: {\r\n          render({ data }) {\r\n            reset()\r\n            return data.response.data?.message || 'Login rejected 🤯'\r\n          }\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <H2>Create an account</H2>\r\n      <Form onSubmit={handleSubmit(onSubmit)}>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.nickname}\r\n            {...register(\"nickname\")}\r\n          />\r\n          <InputLabel>Nickname</InputLabel>\r\n          {errors.nickname && <ErrorMsg>{errors.nickname.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"text\"\r\n            placeholder=\"...\"\r\n            $danger={errors.username}\r\n            {...register(\"username\")}\r\n          />\r\n          <InputLabel>Username</InputLabel>\r\n          {errors.username && <ErrorMsg>{errors.username.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.password}\r\n            {...register(\"password\")}\r\n          />\r\n          <InputLabel>Password</InputLabel>\r\n          {errors.password && <ErrorMsg>{errors.password.message}</ErrorMsg>}\r\n        </InputField>\r\n        <InputField>\r\n          <Input\r\n            type=\"password\"\r\n            placeholder=\"...\"\r\n            $danger={errors.confirmPassword}\r\n            {...register(\"confirmPassword\")}\r\n          />\r\n          <InputLabel>Confirm Password</InputLabel>\r\n          {errors.confirmPassword && <ErrorMsg>{errors.confirmPassword.message}</ErrorMsg>}\r\n        </InputField>\r\n        <CheckboxField>\r\n          <CheckboxLabel $danger={errors.checkRules}>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              $danger={errors.checkRules}\r\n              {...register(\"checkRules\")}\r\n            />\r\n            By creating account, you agree to accept our Privacy Policy, Terms\r\n            of Service and Notification settings. {errors.checkRules && errors.checkRules.message}\r\n          </CheckboxLabel>\r\n        </CheckboxField>\r\n        <SubmitBtn>Sing Up</SubmitBtn>\r\n      </Form>\r\n      <Note>\r\n        <p>Already have an account?</p>\r\n        <button onClick={switchForm} >Log in</button>\r\n      </Note>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n","import styled from '@emotion/styled/macro'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\n\r\nimport useToggle from '../../../hooks/useToggle'\r\nimport Modal from '../../Modal'\r\nimport LoginForm from './LoginForm'\r\nimport RegisterForm from './RegisterForm'\r\n\r\n\r\nlibrary.add(fab)\r\n\r\nconst Wrapper = styled.div`\r\n  position: relative;\r\n  font-size: .8rem;\r\n  width: 400px;\r\n  padding: 1.5rem 1.25rem 1.25rem;\r\n  margin: 3rem 0 0;\r\n  border-radius: 10px;\r\n  background: #fff;\r\n  box-shadow: 0 0.5em 1em -0.125em rgb(10 10 10 / 10%), 0 0px 0 1px rgb(10 10 10 / 2%);\r\n`\r\n\r\nconst BackBtn = styled.div`\r\n  font-size: .7rem;\r\n  position: absolute;\r\n  top: 32px;\r\n  left: 28px;\r\n  cursor: pointer;\r\n\r\n  & span {\r\n    margin-left: 10px;\r\n  }  \r\n  &::after {\r\n    content: '';\r\n    position: absolute;\r\n    bottom: -4px;\r\n    right: 0;\r\n    left: 0;\r\n    width: 0%;\r\n    height: 2px;\r\n    background: #a29bfe;\r\n    transition: width 1s .2s;\r\n  }\r\n  &:hover {\r\n    font-weight: 700;\r\n  }\r\n  &:hover::after {\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst FormModal = ({ handleToggle }) => {\r\n  const [isLoginForm, toggleForm] = useToggle(true)\r\n\r\n  return (\r\n    <Modal>\r\n      <Wrapper>\r\n        <BackBtn onClick={handleToggle}>\r\n          <FontAwesomeIcon icon={faArrowLeft} />\r\n          <span>Back</span>\r\n        </BackBtn>\r\n        {\r\n          isLoginForm ?\r\n            <LoginForm toggleModal={handleToggle} switchForm={toggleForm} /> :\r\n            <RegisterForm toggleModal={handleToggle} switchForm={toggleForm} />\r\n        }\r\n      </Wrapper>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default FormModal\r\n","import { useContext } from 'react'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport styled from '@emotion/styled/macro'\r\nimport { toast } from 'react-toastify'\r\n\r\nimport useToggle from '../../hooks/useToggle'\r\nimport FormModal from './FormModal'\r\nimport { AuthContext } from '../../context'\r\nimport { clearAuthToken } from '../../utils'\r\n\r\n\r\nconst HeaderContainer = styled.header`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\n\r\nconst NavbarList = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst Nav = styled(NavLink, {\r\n  activeClassName: 'active',\r\n})`\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  padding: 2px 12px;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  color: #999;\r\n  text-decoration: none;\r\n\r\n  & + & {\r\n    margin-left: 6px;\r\n  }\r\n  &.active {\r\n    color: #000;\r\n  }\r\n  &:hover {\r\n    color: #444;\r\n    background: #ddd;\r\n  }\r\n`\r\n\r\nconst Span = styled.span`\r\n  font-size: 1rem;\r\n  font-weight: 700;\r\n  margin-right: 1rem;\r\n`\r\n\r\nconst UserBtn = styled.button`\r\n  font-size: .9rem;\r\n  padding: 2px 8px;\r\n  background-color: #a29bfe;\r\n  /* background-color: #1877f2; */\r\n  border-color: transparent;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 2px #666;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  transition: all .3s;\r\n\r\n  &:active {\r\n    transform: translate(2px, 2px);\r\n    box-shadow: none;\r\n  }\r\n`\r\n\r\nconst Header = () => {\r\n  const [isModalOpen, toggleModal] = useToggle()\r\n  const { user, setUser } = useContext(AuthContext)\r\n  const handleLogout = () => {\r\n    clearAuthToken()\r\n    setUser(null)\r\n    toast.warn('Logout success !', { autoClose: 3000 })\r\n  }\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      {isModalOpen && <FormModal handleToggle={toggleModal} />}\r\n      <NavbarList>\r\n        <Nav exact to=\"/\">Home</Nav>\r\n        {user && <Nav to=\"/new_post\">Post</Nav>}\r\n        <Nav to=\"/about\">About me</Nav>\r\n      </NavbarList>\r\n      <div>\r\n        {user?.username && <Span>{'Hi ' + user.username}</Span>}\r\n        {user ? <UserBtn onClick={handleLogout}>log out</UserBtn> : <UserBtn onClick={toggleModal}>login</UserBtn>}\r\n      </div>\r\n    </HeaderContainer >\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import styled from '@emotion/styled/macro'\r\n\r\n\r\nconst FooterContainer = styled.footer`\r\n  font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n  'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n  font-size: .8rem;\r\n  padding: 16px 0 16px;\r\n  text-align: center;\r\n  \r\n  a {\r\n    font-family: \"Cyber\", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue';\r\n    font-style: italic;\r\n    color: #74b9ff;\r\n  }\r\n`\r\n\r\nconst Footer = () => (\r\n  <FooterContainer>\r\n    &copy; copyright 2021 by <a href={`https://github.com/CoolizzLuo`} target=\"_blank\" rel=\"noreferrer\">Enzo</a>\r\n  </FooterContainer>\r\n)\r\n\r\n\r\nexport default Footer\r\n","import { useState, useLayoutEffect } from 'react'\r\n\r\nimport styled from '@emotion/styled'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nimport RouteSwitch from './components/RouteSwitch'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport { AuthContext } from './context'\r\nimport { getUsers, getMe } from './WebAPI'\r\nimport { getAuthToken } from './utils'\r\n\r\n\r\nconst Layout = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  padding: 0 30px;\r\n  max-width: 768px;\r\n`\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n  width: 100%;\r\n  /* height: calc(100vh - 204px); */\r\n  height: calc(100vh - 64px - 24px - 53px );\r\n  overflow: auto;\r\n  margin: 24px 0 0;\r\n  /* padding: 24px 0 0; */\r\n`\r\n\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [userList, setUserList] = useState([])\r\n  const token = getAuthToken()\r\n\r\n  useLayoutEffect(() => {\r\n    getMe().then((res) => {\r\n      if (res.ok !== 1) return\r\n      setUser(res.data)\r\n    })\r\n  }, [token])\r\n\r\n  useLayoutEffect(() => {\r\n    getUsers().then((res) => {\r\n      // if (res.ok !== 1) return\r\n      setUserList(res)\r\n    })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, setUser, userList }}>\r\n      <ToastContainer\r\n        position=\"top-center\"\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnVisibilityChange\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n      <Layout>\r\n        <Router>\r\n          <Header />\r\n          <Container>\r\n            <RouteSwitch />\r\n          </Container>\r\n          <Footer />\r\n        </Router>\r\n      </Layout>\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Global, css } from '@emotion/react'\r\nimport GlobalStyle from './styles/GlobalStyle'\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Global styles={css`${GlobalStyle}`} />\r\n    <App />\r\n  </React.StrictMode>\r\n  , document.getElementById('root'));\r\n"],"sourceRoot":""}